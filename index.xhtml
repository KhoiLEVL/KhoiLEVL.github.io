<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr">

  <head>
    <title>COMPTE RENDU</title>
    <!-- Bootstrap core CSS -->
    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet"></link>
    <!-- Custom styles for this template -->
    <link href="css/scrolling-nav.css" rel="stylesheet"></link>
  </head>
  <body id="page-top" >
   <!-- Navigation -->
    <div id = "0">
		<img  src="logo_ECL.jpg" style= " width: 100%; height: 100%; " alt="Logo"></img>
		<div class="container text-center" >
		<h1>Synthèse : Chatbot d’application et nouvelle tendance</h1>
		<p class="lead">LE HOANG KHOI</p>
		</div>
	</div>

	<section id="Table">
	<div class="container">
	<h2 style="font-size: 20px;">Table des matières</h2>
	<div class="row">

	 <div class="col-lg-8 mx-auto">
			<a href="#1">Quest que c’est un chat bot ? </a>
			<br></br>
			<a href="#2">Comment ça marche ?</a>
			<br></br>
			<a href="#3">Choisir la tech pour réaliser le chatbot c’est …pas facile ?</a>
			<br></br>
			<a href="#4">Architecture d’application chatbot</a>
			<br></br>
			<a href="#5">La tendance ou la chance pour chatbot ?</a>
			<br></br>
		</div>
	</div>
	</div>


	</section>
	<section id="Q1">
    <div class="container">
        <div class="row">
          <div class="col-lg-8 mx-auto">
		  <div id = "1">
            <h2>Quest que c’est un chat bot ? </h2>
			<!-- <a href="schema.xsd">Click here for the .doc file called flowers.</a> -->
            <p class="lead">Suivi Cambridge Dictionnaire:</p>
  <p class="lead">"A computer program designed to have a conversation with a human being, especially over the internet ""
</p>
              <p class="lead">Simplement, nous considérons chatbot comme un logiciel pouvant communiquer avec humain par langage naturel via un interface, voix ou texte.</p>
<p class="lead">Mais il faut noter que la capacité de chatbot maintenant est limité par rapport la technique aujourd’hui. « Limité » c’est-à-dire pas comme entre humain avec humain. Des science-fiction toujours nous ment avec des parfait chatbot comme Jarvis en Ironman ou Skynet. Nous parlons en détail sur limite ci- dessous.
</p>
          <p class="lead">Example réel :</p>
  <a href="https://www.apple.com/siri/">Siri</a>
  <a href="https://support.microsoft.com/en-us/help/17214/windows-10-what-is">Cortana</a>
  <a href="https://www.topbots.com/project/sephora-kik-bot-review/">Sephora</a>
  <a href=" https://www.dominos.com.au/inside-dominos/technology/messenger-bot">Dominos Pizza</a>
			</div>
          </div>
        </div>
      </div>
	</section>
	<section id="Q2">
      <div class="container">
        <div class="row">
          <div class="col-lg-8 mx-auto">
			<div id = "2">
            <h2>Comment ça marche ? </h2>
	          <p class="lead">Suivi le model de réalisation, nous avons 2 modèles principaux servi à de domaine spécifique</p>
			<ul>
      </ul>

			<p style="text-align:center;"><img  src="chatbotframwork.jpg" width="600" height="400" style="margin-left: auto; margin-right: auto;"    alt="img"></img></p>
      <b><i>Retrieval-based model</i></b>
			<p class="lead">Via des réponds déjà prédéfini avant et la façon de trouver de bonne réponds sur input et contexte. La façon peut être correspondance d'expression basée sur des règles ou ensemble des Machine Learning classification</p>
			<p class="lead">Donc, ça donne davantage avec aucun problème de grammaire et facile à réaliser, et non besoin de large data pour entrainer le chatbot. Mais avec hard-code, l’intelligent de ce type de chatbot est 0 et la capacite de répondre à nouveau question est impossible. Donc, le domaine ferme est adapté par ce type de chatbot.</p>
      <b><i>Generative models</i></b>
      <p class="lead">Diffèrent avec Retrieval-based model, ce modèle base sur la machine learning technique. Seq2Seq est le modèle pour générer de texte comme de façon que nous faisons la traduction technique. Sauf ici notre output est une réponse. Et le modèle populaire est LSTM Encoder avec LSTM Decoder.</p>
      <p style="text-align:center;"><img  src="LSTM.jpg" width="600" height="200" style="margin-left: auto; margin-right: auto;"    alt="img"></img></p>

      <p class="lead">Ce modèle nous donne des points fort par des réponses générées créative non -dépendant sur des réponses prédéfinies. Nous ne pouvons pas construire des règles pour forcer notre modèle à suivre. Mais des difficultés de réaliser des modèles et la capacite d’adapte sur la question avec les réponses exactes sont des points faibles.</p>
      <p class="lead">En hors, sur 2 modèle, deep learning technique peut appliquer à les deux. Mais la recherche maintenant a de tendance sur des générative modèle. Nous sommes juste au début d’époque.</p>
      <p class="lead">En bref, sur modèle, de chatbot est adapter pour la vie industrielle maintenant c’est la Retrieval-based model et Generative models est notre futur. Nous attendons d’évolution de chatbot sur le domaine ouvert dans près futur.</p>
      <p class="lead"></p>
      <p class="lead"></p>
			<br></br>
			<a href="#0">Remontez en haut de Compte Rendu </a>

		  </div>
		  </div>
        </div>

      </div>
	</section>
	<section id="Q3">
      <div class="container">
        <div class="row">
          <div class="col-lg-8 mx-auto">
			<div id = "3">
            <h2>Choisir la tech pour réaliser le chatbot c’est …pas facile ?</h2>
			<!-- <a href="schema.xsd">Click here for the .doc file called flowers.</a> -->
			 <p class="lead">Suivi l’évolution d’application de message, nous comptons seulement sur des platform de message qui va nous aider à construire un chatbot, c’est énorme. Dépendant à notre conversation, notre système, notre business et notre capacite économique, nous pouvons choisir un modèle plus adaptable.</p>
			<p style="text-align:center;"><img  src="structure.png" width="500" height="700" style="margin-left: auto; margin-right: auto;"    alt="img"></img></p>
			<a href="schema.xsd">Cliquez ici pour voir notre application XML</a>
			<br></br>
			<a href="#0">Remontez en haut de Compte Rendu </a>

			<br></br>
			<br></br>
		  </div>
		  </div>
        </div>
      </div>
	</section>
	<section id="Q4">
      <div class="container">
        <div class="row">
          <div class="col-lg-8 mx-auto">
		  <div id = "4">
            <h2>Architecture d’application chatbot</h2>
      <p style="text-align:center;"><img  src="architecture.jpg" width="500" height="400" style="margin-left: auto; margin-right: auto;"    alt="img"></img></p>
			<p class="lead">Ce schéma décrive en détail comment un système de chatbot marche ? Au début, l’utilisateur interagi avec platform de message et envoie des info besoin d’être traité. Après, le message est reçu bien par le système NLP. Ici, des infos d’utilisateur est analysé. Souvent, le système récupère de intent (verbe exprimer d’action) et des entité (objet affecte par cet action). La façon d’améliorer de système de base de chatbot et prédéfini plus de intent pour faciliter à reconnaitre le besoin du client. Après avoir le besoin de client, dépendant le contexte et le système que nous avons, l’action ou message ou une intervention d’humain va réaliser et envoyer à client. Chaque message reçu, chaque fois notre chatbot évolué suivi l’apprentissages atomisée par cas, ou par info que nous ajoutons à notre chatbot.</p>
			<br></br>
			<a href="#0">Remontez en haut de Compte Rendu </a>
			</div>
			</div>
        </div>
      </div>
	</section>
	<section id="Q5">
      <div class="container">
        <div class="row">
          <div class="col-lg-8 mx-auto">
		  <div id = "5">
            <h2>Q5. Importer les données :</h2>
			<p class="lead">Notre travail dans ce parti est écrire un programme python permettant de créer un document XML conforme à notre application XML conçue précédemment et contenant les données du fichier CSV fourn. Nous utilisons le bibliothèque csv pour lire le fichier csv et le bibliothèque lxml avec le partie etree pour construire notre arbre de xml. Nous décidons à récupérer les noms de éléments et attributs par la première ligne. Au début, nous traduisons les mots français à mots anglais pour éviter le problème avec le type de chaine caractère français du nom éléments. Ensuite, nous construisons notre arbre avec le nœud root ‘ class’. Le nœud root ‘ class’ est suivi par deux branches principaux service ‘RER’ et ‘Transilien’. Nous ajoutons ces deux branches par deux nœuds et commençons notre premier arbre xml avec root nœud ‘class’ et deux nœud service suivi. Après, pour chaque type de service, nous ajoutons des lignes par cet façon : si nous avons déjà envisagé avec une ligne, nous cherchons et accéder du nœud du cet ligne et ajoutons des données. Si non, nous créons de nouveau nœud pour cet ligne.</p>
			<p class="lead">Voici notre programme python permettant de créer un document XML conforme à l'application conçue précédemment et contenant les données du fichier CSV fourni. Les commentaires sont ajoutés pour expliquer l'étapes principal.</p>
			<a href="importer_de_donne.py">Cliquez ici pour voir notre programme python</a>
			</div>
			</div>
		</div>
      </div>
	 </section>
	<section id="Q6">
      <div class="container">
        <div class="row">
          <div class="col-lg-8 mx-auto">
		  <div id = "6">
            <h2>Q6. Afficher le document XML :</h2>
			<p class="lead">Notre travail dans ce parti est écrire une feuille de style CSS permettant de afficher notre document xml de manière pertinente dans un navigateur. Nous souhaitons d’afficher notre document XML par 2 table. Le table avec frontière rouge est service « RER ». Le table avec frontière bleu est service « Transilien ». Chaque colonne dans le table exprimer des infos du chaque Ligne du service. Chaque info a de couleur unique pour facile à les distinguer.
			</p>
			<p class="lead">Voici notre document xml comportant une référence à une feuille de style CSS </p>
			<a href="ponctualite-mensuelle-transilien-2.xml">Cliquez ici pour voir notre document XML</a>
			<br></br>
			<p class="lead">Voici notre feuille de style CSS </p>
			<a href="ponctualite-mensuelle-transilien.css">Cliquez ici pour voir notre fichier css</a>
			<br></br>
			<a href="#0">Remontez en haut de Compte Rendu </a>
			</div>
			</div>
        </div>
      </div>
 	 </section>
	<section id="Q7">
      <div class="container">
        <div class="row">
          <div class="col-lg-8 mx-auto">
		  <div id = "7">
            <h2>Q7. Écrire une DTD décrivant la syntaxe du document XML :</h2>
			<p class="lead">Notre travail dans ce parti est écrire une document dtd pour décrire notre document xml. Suivre notre document XML, nous avons des fichier dtd ci-dessous. Dans fichier dtd, le nombre de ELEMENT et ATTRIBUE sont même avec application XML (9 ELELMENTs et 2 ATTRIBUTs). Nous ne devons pas déclarer le type en détaille comme application XML dans certains cas comme éviter le NULL valeur dans ELELMENT "Taux_de_ponctualite", limiter le nombre de ELEMENT, etc.</p>
			<p class="lead">Malheureusement, nous ne pouvons pas trouver de façon pour bien représenter notre fichier dtd et notre fichier document xml avec DTD interne sur ce compte rendu. Nous vous prions de trouver ces fichiers dans le dossier Compte Rendu avec le nom « ponctualite-mensuelle-transilien.dtd » et « ponctualite-mensuelle-transilien3.xml » Nous mettons le fichier dtd à interieur du document XML. </p>
			<a href="ponctualite-mensuelle-transilien3.xml">Cliquez ici pour voir notre fichier xml avec DTD interne (Navigateur ne peut pas représenter la partie dtd)</a>
			<br></br>
			<a href="#0">Remontez en haut de Compte Rendu </a>
			</div>
			</div>
        </div>
      </div>
	</section>
	<section id="Q8">
      <div class="container">
        <div class="row">
          <div class="col-lg-8 mx-auto">
		  <div id = "8">
            <h2>Q8. Valider le document XML en ligne :</h2>
			<p class="lead">Notre travail dans ce parti est valider notre document XML en ligne. Nous choisissons le site  https://www.freeformatter.com/xml-validator-xsd.html pour vérifier notre fichier xml. Dans notre fichier de compte rendu, le document xml avec dtd interne que nous utilisons pour validation s'appelle "ponctualite-mensuelle-transilien3.xml".</p>
			<p style="text-align:center;"><img  src="validation_dtd.png" width="600" height="200" style="margin-left: auto; margin-right: auto;"    alt="img"></img></p>
			<br></br>
			</div>
			</div>
        </div>
      </div>
	</section>
	<section id="Q9">

      <div class="container">
        <div class="row">
          <div class="col-lg-8 mx-auto">
		  <div id = "9">
            <h2>Q9. Développer un validateur  :</h2>
			<p class="lead">Notre travail dans ce parti est écrire un programme python permettant de valider notre document xml. Grace au bibliothèque “io”, nous pouvons lire notre fichier de xml. Pour traitement document xml, nous utilisons la partie etree de bibliothèque lxml. Pour aider machine à reconnaitre notre document xml, nous utilisons la fonction « etree.parse ». Pour aider machine à reconnaitre la partie dtd, nous utilise la fonction docinfo pour récupérer l’info et fonction « internalDTD » pour récupérer notre document dtd dans intérieur notre document xml. Enfin pour validation, la fonction « validate » et il nous donne le résultat « True » ou « False ». Nous faitons aussi une signature, si votre fichier en bon forme, il vous informe "Votre fichier est valide". Si non, il vous informe "Votre fichier n'est pas valide"</p>
			<p class="lead">Nous avons déjà fait validation de notre fichier "ponctualite-mensuelle-transilien3.xml" et le programme nous dit que "Votre fichier est valide".</p>
			<a href="validation.py">Cliquez ici pour voir notre programme python</a>
			<br></br>
			<a href="#0">Remontez en haut de Compte Rendu </a>
			<br></br>
			</div>
			</div>
        </div>
      </div>
	</section>

    <section id="contact">
      <div class="container">
        <div class="row">
          <div class="col-lg-8 mx-auto">
            <h2>Merci pour votre aide !</h2>
           </div>
        </div>
      </div>
    </section>

    <!-- Footer -->
    <footer class="py-5 bg-dark">
      <div class="container">
        <p class="m-0 text-center text-white">BONNE JOURNÉE !!</p>
      </div>
      <!-- /.container -->
    </footer>

    <!-- Bootstrap core JavaScript -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Plugin JavaScript -->
    <script src="vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom JavaScript for this theme -->
    <script src="js/scrolling-nav.js"></script>

  </body>

</html>
